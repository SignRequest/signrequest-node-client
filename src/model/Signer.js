/*
 * SignRequest API
 * API for SignRequest.com
 *
 * OpenAPI spec version: v1
 * Contact: tech-support@signrequest.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineDocumentSignerIntegrationData', 'model/SignerAttachment', 'model/SignerInputs'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./InlineDocumentSignerIntegrationData'), require('./SignerAttachment'), require('./SignerInputs'));
  } else {
    // Browser globals (root is window)
    if (!root.SignrequestClient) {
      root.SignrequestClient = {};
    }
    root.SignrequestClient.Signer = factory(root.SignrequestClient.ApiClient, root.SignrequestClient.InlineDocumentSignerIntegrationData, root.SignrequestClient.SignerAttachment, root.SignrequestClient.SignerInputs);
  }
}(this, function(ApiClient, InlineDocumentSignerIntegrationData, SignerAttachment, SignerInputs) {
  'use strict';




  /**
   * The Signer model module.
   * @module model/Signer
   * @version 1.1.1
   */

  /**
   * Constructs a new <code>Signer</code>.
   * @alias module:model/Signer
   * @class
   * @param email {String} 
   */
  var exports = function(email) {
    var _this = this;

    _this['email'] = email;



































  };

  /**
   * Constructs a <code>Signer</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Signer} obj Optional instance to populate.
   * @return {module:model/Signer} The populated <code>Signer</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('display_name')) {
        obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
      }
      if (data.hasOwnProperty('first_name')) {
        obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
      }
      if (data.hasOwnProperty('last_name')) {
        obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
      }
      if (data.hasOwnProperty('email_viewed')) {
        obj['email_viewed'] = ApiClient.convertToType(data['email_viewed'], 'Boolean');
      }
      if (data.hasOwnProperty('viewed')) {
        obj['viewed'] = ApiClient.convertToType(data['viewed'], 'Boolean');
      }
      if (data.hasOwnProperty('signed')) {
        obj['signed'] = ApiClient.convertToType(data['signed'], 'Boolean');
      }
      if (data.hasOwnProperty('downloaded')) {
        obj['downloaded'] = ApiClient.convertToType(data['downloaded'], 'Boolean');
      }
      if (data.hasOwnProperty('signed_on')) {
        obj['signed_on'] = ApiClient.convertToType(data['signed_on'], 'Date');
      }
      if (data.hasOwnProperty('needs_to_sign')) {
        obj['needs_to_sign'] = ApiClient.convertToType(data['needs_to_sign'], 'Boolean');
      }
      if (data.hasOwnProperty('approve_only')) {
        obj['approve_only'] = ApiClient.convertToType(data['approve_only'], 'Boolean');
      }
      if (data.hasOwnProperty('notify_only')) {
        obj['notify_only'] = ApiClient.convertToType(data['notify_only'], 'Boolean');
      }
      if (data.hasOwnProperty('in_person')) {
        obj['in_person'] = ApiClient.convertToType(data['in_person'], 'Boolean');
      }
      if (data.hasOwnProperty('order')) {
        obj['order'] = ApiClient.convertToType(data['order'], 'Number');
      }
      if (data.hasOwnProperty('language')) {
        obj['language'] = ApiClient.convertToType(data['language'], 'String');
      }
      if (data.hasOwnProperty('force_language')) {
        obj['force_language'] = ApiClient.convertToType(data['force_language'], 'Boolean');
      }
      if (data.hasOwnProperty('emailed')) {
        obj['emailed'] = ApiClient.convertToType(data['emailed'], 'Boolean');
      }
      if (data.hasOwnProperty('verify_phone_number')) {
        obj['verify_phone_number'] = ApiClient.convertToType(data['verify_phone_number'], 'String');
      }
      if (data.hasOwnProperty('verify_bank_account')) {
        obj['verify_bank_account'] = ApiClient.convertToType(data['verify_bank_account'], 'String');
      }
      if (data.hasOwnProperty('declined')) {
        obj['declined'] = ApiClient.convertToType(data['declined'], 'Boolean');
      }
      if (data.hasOwnProperty('declined_on')) {
        obj['declined_on'] = ApiClient.convertToType(data['declined_on'], 'Date');
      }
      if (data.hasOwnProperty('forwarded')) {
        obj['forwarded'] = ApiClient.convertToType(data['forwarded'], 'String');
      }
      if (data.hasOwnProperty('forwarded_on')) {
        obj['forwarded_on'] = ApiClient.convertToType(data['forwarded_on'], 'Date');
      }
      if (data.hasOwnProperty('forwarded_to_email')) {
        obj['forwarded_to_email'] = ApiClient.convertToType(data['forwarded_to_email'], 'String');
      }
      if (data.hasOwnProperty('forwarded_reason')) {
        obj['forwarded_reason'] = ApiClient.convertToType(data['forwarded_reason'], 'String');
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
      if (data.hasOwnProperty('embed_url_user_id')) {
        obj['embed_url_user_id'] = ApiClient.convertToType(data['embed_url_user_id'], 'String');
      }
      if (data.hasOwnProperty('inputs')) {
        obj['inputs'] = ApiClient.convertToType(data['inputs'], [SignerInputs]);
      }
      if (data.hasOwnProperty('use_stamp_for_approve_only')) {
        obj['use_stamp_for_approve_only'] = ApiClient.convertToType(data['use_stamp_for_approve_only'], 'Boolean');
      }
      if (data.hasOwnProperty('embed_url')) {
        obj['embed_url'] = ApiClient.convertToType(data['embed_url'], 'String');
      }
      if (data.hasOwnProperty('attachments')) {
        obj['attachments'] = ApiClient.convertToType(data['attachments'], [SignerAttachment]);
      }
      if (data.hasOwnProperty('redirect_url')) {
        obj['redirect_url'] = ApiClient.convertToType(data['redirect_url'], 'String');
      }
      if (data.hasOwnProperty('redirect_url_declined')) {
        obj['redirect_url_declined'] = ApiClient.convertToType(data['redirect_url_declined'], 'String');
      }
      if (data.hasOwnProperty('after_document')) {
        obj['after_document'] = ApiClient.convertToType(data['after_document'], 'String');
      }
      if (data.hasOwnProperty('integrations')) {
        obj['integrations'] = ApiClient.convertToType(data['integrations'], [InlineDocumentSignerIntegrationData]);
      }
      if (data.hasOwnProperty('password')) {
        obj['password'] = ApiClient.convertToType(data['password'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * @member {String} display_name
   */
  exports.prototype['display_name'] = undefined;
  /**
   * @member {String} first_name
   */
  exports.prototype['first_name'] = undefined;
  /**
   * @member {String} last_name
   */
  exports.prototype['last_name'] = undefined;
  /**
   * @member {Boolean} email_viewed
   */
  exports.prototype['email_viewed'] = undefined;
  /**
   * @member {Boolean} viewed
   */
  exports.prototype['viewed'] = undefined;
  /**
   * @member {Boolean} signed
   */
  exports.prototype['signed'] = undefined;
  /**
   * @member {Boolean} downloaded
   */
  exports.prototype['downloaded'] = undefined;
  /**
   * @member {Date} signed_on
   */
  exports.prototype['signed_on'] = undefined;
  /**
   * @member {Boolean} needs_to_sign
   * @default true
   */
  exports.prototype['needs_to_sign'] = true;
  /**
   * @member {Boolean} approve_only
   */
  exports.prototype['approve_only'] = undefined;
  /**
   * @member {Boolean} notify_only
   */
  exports.prototype['notify_only'] = undefined;
  /**
   * @member {Boolean} in_person
   */
  exports.prototype['in_person'] = undefined;
  /**
   * @member {Number} order
   */
  exports.prototype['order'] = undefined;
  /**
   * @member {module:model/Signer.LanguageEnum} language
   */
  exports.prototype['language'] = undefined;
  /**
   * @member {Boolean} force_language
   */
  exports.prototype['force_language'] = undefined;
  /**
   * @member {Boolean} emailed
   */
  exports.prototype['emailed'] = undefined;
  /**
   * @member {String} verify_phone_number
   */
  exports.prototype['verify_phone_number'] = undefined;
  /**
   * @member {String} verify_bank_account
   */
  exports.prototype['verify_bank_account'] = undefined;
  /**
   * @member {Boolean} declined
   */
  exports.prototype['declined'] = undefined;
  /**
   * @member {Date} declined_on
   */
  exports.prototype['declined_on'] = undefined;
  /**
   * @member {String} forwarded
   */
  exports.prototype['forwarded'] = undefined;
  /**
   * @member {Date} forwarded_on
   */
  exports.prototype['forwarded_on'] = undefined;
  /**
   * @member {String} forwarded_to_email
   */
  exports.prototype['forwarded_to_email'] = undefined;
  /**
   * @member {String} forwarded_reason
   */
  exports.prototype['forwarded_reason'] = undefined;
  /**
   * @member {String} message
   */
  exports.prototype['message'] = undefined;
  /**
   * @member {String} embed_url_user_id
   */
  exports.prototype['embed_url_user_id'] = undefined;
  /**
   * @member {Array.<module:model/SignerInputs>} inputs
   */
  exports.prototype['inputs'] = undefined;
  /**
   * Place an approval stamp on a document when a signer approves a document
   * @member {Boolean} use_stamp_for_approve_only
   */
  exports.prototype['use_stamp_for_approve_only'] = undefined;
  /**
   * @member {String} embed_url
   */
  exports.prototype['embed_url'] = undefined;
  /**
   * @member {Array.<module:model/SignerAttachment>} attachments
   */
  exports.prototype['attachments'] = undefined;
  /**
   * @member {String} redirect_url
   */
  exports.prototype['redirect_url'] = undefined;
  /**
   * @member {String} redirect_url_declined
   */
  exports.prototype['redirect_url_declined'] = undefined;
  /**
   * @member {String} after_document
   */
  exports.prototype['after_document'] = undefined;
  /**
   * @member {Array.<module:model/InlineDocumentSignerIntegrationData>} integrations
   */
  exports.prototype['integrations'] = undefined;
  /**
   * Require the signer to enter this password before signing a document. This field is write only.
   * @member {String} password
   */
  exports.prototype['password'] = undefined;


  /**
   * Allowed values for the <code>language</code> property.
   * @enum {String}
   * @readonly
   */
  exports.LanguageEnum = {
    /**
     * value: "en"
     * @const
     */
    "en": "en",
    /**
     * value: "en-gb"
     * @const
     */
    "en-gb": "en-gb",
    /**
     * value: "nl"
     * @const
     */
    "nl": "nl",
    /**
     * value: "fr"
     * @const
     */
    "fr": "fr",
    /**
     * value: "de"
     * @const
     */
    "de": "de",
    /**
     * value: "he"
     * @const
     */
    "he": "he",
    /**
     * value: "da"
     * @const
     */
    "da": "da",
    /**
     * value: "fi"
     * @const
     */
    "fi": "fi",
    /**
     * value: "hu"
     * @const
     */
    "hu": "hu",
    /**
     * value: "it"
     * @const
     */
    "it": "it",
    /**
     * value: "no"
     * @const
     */
    "no": "no",
    /**
     * value: "pl"
     * @const
     */
    "pl": "pl",
    /**
     * value: "pt"
     * @const
     */
    "pt": "pt",
    /**
     * value: "es"
     * @const
     */
    "es": "es",
    /**
     * value: "sv"
     * @const
     */
    "sv": "sv",
    /**
     * value: "ru"
     * @const
     */
    "ru": "ru"  };


  return exports;
}));


