/*
 * SignRequest API
 * API for SignRequest.com
 *
 * OpenAPI spec version: v1
 * Contact: tech-support@signrequest.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SignrequestClient);
  }
}(this, function(expect, SignrequestClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SignrequestClient.Event();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Event', function() {
    it('should create an instance of Event', function() {
      // uncomment below and update the code to test Event
      //var instance = new SignrequestClient.Event();
      //expect(instance).to.be.a(SignrequestClient.Event);
    });

    it('should have the property uuid (base name: "uuid")', function() {
      // uncomment below and update the code to test the property uuid
      //var instance = new SignrequestClient.Event();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new SignrequestClient.Event();
      //expect(instance).to.be();
    });

    it('should have the property event_type (base name: "event_type")', function() {
      // uncomment below and update the code to test the property event_type
      //var instance = new SignrequestClient.Event();
      //expect(instance).to.be();
    });

    it('should have the property delivered (base name: "delivered")', function() {
      // uncomment below and update the code to test the property delivered
      //var instance = new SignrequestClient.Event();
      //expect(instance).to.be();
    });

    it('should have the property delivered_on (base name: "delivered_on")', function() {
      // uncomment below and update the code to test the property delivered_on
      //var instance = new SignrequestClient.Event();
      //expect(instance).to.be();
    });

    it('should have the property callback_status_code (base name: "callback_status_code")', function() {
      // uncomment below and update the code to test the property callback_status_code
      //var instance = new SignrequestClient.Event();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new SignrequestClient.Event();
      //expect(instance).to.be();
    });

    it('should have the property team (base name: "team")', function() {
      // uncomment below and update the code to test the property team
      //var instance = new SignrequestClient.Event();
      //expect(instance).to.be();
    });

    it('should have the property document (base name: "document")', function() {
      // uncomment below and update the code to test the property document
      //var instance = new SignrequestClient.Event();
      //expect(instance).to.be();
    });

    it('should have the property signer (base name: "signer")', function() {
      // uncomment below and update the code to test the property signer
      //var instance = new SignrequestClient.Event();
      //expect(instance).to.be();
    });

  });

}));
