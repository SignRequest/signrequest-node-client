/*
 * SignRequest API
 * API for SignRequest.com
 *
 * OpenAPI spec version: v1
 * Contact: tech-support@signrequest.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SignrequestClient);
  }
}(this, function(expect, SignrequestClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SignrequestClient.Signer();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Signer', function() {
    it('should create an instance of Signer', function() {
      // uncomment below and update the code to test Signer
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be.a(SignrequestClient.Signer);
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property display_name (base name: "display_name")', function() {
      // uncomment below and update the code to test the property display_name
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property first_name (base name: "first_name")', function() {
      // uncomment below and update the code to test the property first_name
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property last_name (base name: "last_name")', function() {
      // uncomment below and update the code to test the property last_name
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property email_viewed (base name: "email_viewed")', function() {
      // uncomment below and update the code to test the property email_viewed
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property viewed (base name: "viewed")', function() {
      // uncomment below and update the code to test the property viewed
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property signed (base name: "signed")', function() {
      // uncomment below and update the code to test the property signed
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property downloaded (base name: "downloaded")', function() {
      // uncomment below and update the code to test the property downloaded
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property signed_on (base name: "signed_on")', function() {
      // uncomment below and update the code to test the property signed_on
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property needs_to_sign (base name: "needs_to_sign")', function() {
      // uncomment below and update the code to test the property needs_to_sign
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property approve_only (base name: "approve_only")', function() {
      // uncomment below and update the code to test the property approve_only
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property notify_only (base name: "notify_only")', function() {
      // uncomment below and update the code to test the property notify_only
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property in_person (base name: "in_person")', function() {
      // uncomment below and update the code to test the property in_person
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property order (base name: "order")', function() {
      // uncomment below and update the code to test the property order
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property force_language (base name: "force_language")', function() {
      // uncomment below and update the code to test the property force_language
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property emailed (base name: "emailed")', function() {
      // uncomment below and update the code to test the property emailed
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property verify_phone_number (base name: "verify_phone_number")', function() {
      // uncomment below and update the code to test the property verify_phone_number
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property verify_bank_account (base name: "verify_bank_account")', function() {
      // uncomment below and update the code to test the property verify_bank_account
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property declined (base name: "declined")', function() {
      // uncomment below and update the code to test the property declined
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property declined_on (base name: "declined_on")', function() {
      // uncomment below and update the code to test the property declined_on
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property forwarded (base name: "forwarded")', function() {
      // uncomment below and update the code to test the property forwarded
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property forwarded_on (base name: "forwarded_on")', function() {
      // uncomment below and update the code to test the property forwarded_on
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property forwarded_to_email (base name: "forwarded_to_email")', function() {
      // uncomment below and update the code to test the property forwarded_to_email
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property forwarded_reason (base name: "forwarded_reason")', function() {
      // uncomment below and update the code to test the property forwarded_reason
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "message")', function() {
      // uncomment below and update the code to test the property message
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property embed_url_user_id (base name: "embed_url_user_id")', function() {
      // uncomment below and update the code to test the property embed_url_user_id
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property inputs (base name: "inputs")', function() {
      // uncomment below and update the code to test the property inputs
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property use_stamp_for_approve_only (base name: "use_stamp_for_approve_only")', function() {
      // uncomment below and update the code to test the property use_stamp_for_approve_only
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property embed_url (base name: "embed_url")', function() {
      // uncomment below and update the code to test the property embed_url
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property attachments (base name: "attachments")', function() {
      // uncomment below and update the code to test the property attachments
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property redirect_url (base name: "redirect_url")', function() {
      // uncomment below and update the code to test the property redirect_url
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property redirect_url_declined (base name: "redirect_url_declined")', function() {
      // uncomment below and update the code to test the property redirect_url_declined
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property after_document (base name: "after_document")', function() {
      // uncomment below and update the code to test the property after_document
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property integrations (base name: "integrations")', function() {
      // uncomment below and update the code to test the property integrations
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instance = new SignrequestClient.Signer();
      //expect(instance).to.be();
    });

  });

}));
